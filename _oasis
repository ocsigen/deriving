OASISFormat: 0.4
Name:        deriving
OCamlVersion: >= 3.12.1
Version:     0.6
Synopsis:    Extension to OCaml for deriving functions from type declarations
Authors:     Jeremy Yallop
License:     MIT
Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild
FilesAB:     syntax/common/id.ml.ab

Flag tc
  Description: type-conv support
  Default: true

Library "deriving"
  Path:            files
  Build:           false
  BuildDepends:    deriving.runtime,deriving.syntax.classes,deriving.syntax

Library "deriving-tc"
  Path:            files
  Build:           false
  BuildDepends:    deriving.runtime,deriving.syntax.classes,deriving.syntax.tc
  FindlibParent:   deriving
  FindlibName : deriving_tc


Library "deriving-runtime"
  Path:            lib
  Modules:         Deriving_Show, Deriving_Eq, Deriving_Bounded,
    Deriving_Enum, Deriving_monad, Deriving_Dump, Deriving_Typeable,
    Deriving_Pickle, Deriving_Functor, Deriving_Default
  InternalModules: Deriving_interned, Deriving_dynmap
  FindlibName : runtime
  FindlibParent: deriving
  BuildDepends: deriving.syntax.common,deriving.syntax.classes,deriving.syntax
  XMETAExtraLines: archive(byte, pkg_num) = "deriving_num.cma"
                   archive(byte, plugin, pkg_num) = "deriving_num.cma"
                   archive(native, pkg_num) = "deriving_num.cmxa"
                   archive(native, plugin, pkg_num) = "deriving_num.cmxs"


Library "deriving-num"
  Path:          lib
  FindlibParent: deriving
  FindlibName :  num
  Modules:       Deriving_num
  BuildDepends:  deriving.runtime
  XMETAEnable: false

Library "pa_deriving_common"
  Path:          syntax/common
  FindlibParent: pa_deriving
  FindlibName :  common
  Pack:          true
  Modules:       Id, Utils, Type, Defs, Clusters, Base, Extend
  BuildDepends:  camlp4,camlp4.extend
  XMETAType:        syntax
  XMETADescription: Deriving syntax
  XMETARequires:    camlp4

Library "pa_deriving"
  Path:          syntax/std
  FindlibParent: deriving
  FindlibName :  syntax
  BuildDepends:  camlp4.extend,deriving.syntax.common
  Modules:       Pa_deriving
  XMETAType:        syntax
  XMETADescription: Deriving syntax
  XMETAExtraLines:  requires(syntax) = "deriving.syntax.common"
  XMETARequires:    camlp4

Library "pa_deriving_tc"
  Path:          syntax/tc
  Build$:        flag(tc)
  Install$:      flag(tc)
  FindlibParent: pa_deriving
  FindlibName :  tc
  BuildDepends:  deriving.syntax.common,type_conv
  Modules:       Pa_deriving_tc
  XMETAType:        syntax
  XMETADescription: Deriving syntax
  XMETAExtraLines:  requires(syntax) = "deriving.syntax.common,type_conv"
  XMETARequires:    camlp4

Library "pa_deriving_classes"
  Path:          syntax/classes
  FindlibParent: pa_deriving
  FindlibName :  classes
  Modules:       Show_class, Dump_class, Enum_class, Bounded_class, Eq_class,
                 Typeable_class, Pickle_class, Functor_class, Default_class
  BuildDepends:  deriving.syntax.common
  XMETAType:        syntax
  XMETADescription: Deriving syntax
  XMETAExtraLines:  requires(syntax) = "deriving.syntax.common"
  XMETARequires:    camlp4

Executable test_notc
  Path: tests
  Install: false
  CompiledObject: best
  MainIs: notc.ml
  BuildDepends: deriving.runtime

Executable test_tc
  Path: tests
  Build$: flag(tc)
  Install: false
  CompiledObject: best
  MainIs: tc.ml
  BuildDepends: deriving.runtime
